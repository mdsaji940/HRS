server.port= 8081

spring.datasource.url= jdbc:mysql://localhost:3306/microservices
spring.datasource.username= root
spring.datasource.password= @sqlsajid123

#Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

# Eureka configuration
spring.application.name= USER-SERVICE
#eureka.client.fetch-registry= true
#eureka.instance.prefer-ip-address= true
#eureka.client.register-with-eureka= true
#eureka.client.service-url.defaultZone= http://localhost:8761/eureka

spring.config.import= optional:configserver:http://localhost:8085

#Actuator
management.health.circuitbreaker.enabled= true
management.endpoints.web.exposure.include= health
management.endpoint.health.show-details= always

#resilience4j
resilience4j.circuitbreaker.instance.ratingHotelBreaker.registerHealthIndicator= true
resilience4j.circuitbreaker.instance.ratingHotelBreaker.eventConsumerBufferSize= 10
resilience4j.circuitbreaker.instance.ratingHotelBreaker.failureRateThreshold= 50
resilience4j.circuitbreaker.instance.ratingHotelBreaker.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instance.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled= true
resilience4j.circuitbreaker.instance.ratingHotelBreaker.waitDurationInOpenState= 6s
resilience4j.circuitbreaker.instance.ratingHotelBreaker.permittedNumbersOfCallsInHalfOpenState= 3
resilience4j.circuitbreaker.instance.ratingHotelBreaker.slidingWindowSize= 10
resilience4j.circuitbreaker.instance.ratingHotelBreaker.slidingWindowType= COUNT_BASED

# Retry configuration
resilience4j.retry.instance.ratingHotelService.max-attempts= 3
resilience4j.retry.instance.ratingHotelService.wait-duration= 5s

# Rate Limiter
resilience4j.ratelimiter.instance.userRateLimiter.limit-refresh-period= 4s
resilience4j.ratelimiter.instance.userRateLimiter.limit-for-period= 4
resilience4j.ratelimiter.instance.userRateLimiter.timeout-duration= 0s

# okta configuration
okta.oauth2.issuer= https://dev-08806894.okta.com/oauth2/default
okta.oauth2.audience= api://default

# spring security
spring.security.oauth2.resourceserver.jwt.issuer= https://dev-08806894.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider= okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type= client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope= internal
spring.security.oauth2.client.registration.my-internal-client.client-id= 0oa8w53e9wnk8FbKW5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret= e2A740IQFkCZHLEF6_bpQm-HbaJUmIOS1Ij3IUnQ

spring.security.oauth2.client.provider.okta.issuer-uri= https://dev-08806894.okta.com/oauth2/default